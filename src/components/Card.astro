---
/**
 * Card - Generic card component with surface panel styling
 * 
 * @param variant - Visual style variant
 * @param hover - Enable hover lift effect
 * @param padding - Padding size
 * @param as - HTML element to render as
 */
interface Props {
  variant?: 'default' | 'surface' | 'outline';
  hover?: boolean;
  padding?: 'normal' | 'compact' | 'spacious';
  as?: 'div' | 'article' | 'section';
  class?: string;
}

const { 
  variant = 'surface',
  hover = true,
  padding = 'normal',
  as: Element = 'div',
  class: className = ''
} = Astro.props;

const classes = [
  'card',
  `card--${variant}`,
  `card--padding-${padding}`,
  hover && 'card--hover',
  className
].filter(Boolean).join(' ');
---

<Element class={classes}>
  <slot />
</Element>

<style>
  .card {
    border-radius: var(--radius-lg);
    transition: all var(--transition-base);
  }

  /* Variants */
  .card--surface {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-soft);
    backdrop-filter: blur(10px);
  }

  .card--outline {
    background: transparent;
    border: 1px solid var(--color-border);
  }

  .card--default {
    background: var(--color-bg-accent);
    border: 1px solid var(--color-border);
  }

  /* Padding variants */
  .card--padding-compact {
    padding: clamp(1rem, 3vw, 1.5rem);
  }

  .card--padding-normal {
    padding: clamp(1.6rem, 4vw, 2.5rem);
  }

  .card--padding-spacious {
    padding: clamp(2rem, 5vw, 3rem);
  }

  /* Hover effect */
  .card--hover:hover {
    border-color: rgba(93, 225, 228, 0.35);
    transform: translateY(-2px);
    box-shadow: var(--shadow-strong);
  }

  .card--hover:focus-within {
    border-color: rgba(93, 225, 228, 0.5);
    box-shadow: var(--shadow-strong);
  }

  /* Disable hover on mobile for better performance */
  @media (max-width: 768px) {
    .card--hover:hover {
      transform: none;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .card--hover:hover {
      transform: none;
    }
  }
</style>